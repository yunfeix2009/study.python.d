# 算法基础之冒泡排序



# 什么是算法
# 在生活中，解决问题的办法就相当于一种算法
# 在程序中，为完成任务而写的的代码就是算法
# 比如前面学习的计算1~100之间的偶数和，我们写的那些代码就可以说是算法

# 请写程序计算1~100之间的偶数和(包括100)


# 排序算法：按大小排顺序
# 查找算法: 查找指定元素的索引



# 冒泡算法思想：########
# 1从前往后两两比较相邻元素，大的放在后面
# 一趟做完后，最后一个元素是最大的数
# 2对前面的元素重复以上步骤，直到没有任何一对数字需要比较

# 为什么叫冒泡：因为越小的元素会经过交换慢慢"浮"到数列的顶端(前面)
# [10,5,3,40,2]
# 第1趟
# [5,10,3,40,2]
# [5,3,10,40,2]
# [5,3,10,40,2]
# [5,3,10,2,40]
# 第2趟
# [3,5,10,2,40]
# [3,5,10,2,40]
# [3,5,2,10,40]
# 第3趟
# [3,5,2,10,40]
# [3,2,5,10,40]
# 第4趟
# [2,3,5,10,40]

# 交换两个数
# mylist = [10,5,3,40,2]
# mylist[0],mylist[1] = mylist[1],mylist[0]
# print(mylist)


# 长度 5
# 4 趟
#                    i
# 第一趟 比较 4 次    1
# 第二趟 比较 3 次    2
# 第三趟 比较 2 次    3
# 第四趟 比较 1 次    4

# 代码实现
# def bubbleSort(mylist):
#     for i in range(1, len(mylist)):# 长度-1趟
#         for j in range(0, len(mylist)-i):#每趟比较的次数
#             if mylist[j] > mylist[j+1]:
#                 mylist[j], mylist[j + 1] = mylist[j + 1], mylist[j] #交换
#     return mylist


















# 课堂练习
# 有一个列表[10,5,3,40,2],请自己写算法把这个列表中所有数字从小到大依次排序。
def bubbleSort(list):
    for i in range(1,len(list)):
        for j in range(len(list)-i):
            if list[j]>list[j+1]:
                list[j],list[j+1]=list[j+1],list[j]
    return list
mylist=[10,5,3,40,2]
print(bubbleSort(mylist))